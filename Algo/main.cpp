#include <iostream>

using namespace std;

/* -----------------------------------------------------
퀵 정렬 : 특정한 값을 기준으로 큰 숫자와 작은 숫자를 나누기
퀵 정렬의 시간복잡도는 O(N*logN) - 평균속도
퀵 정렬의 최악 시간복잡도는 O(N^2)
------------------------------------------------------*/ 

void quickSort(int* data, int start, int end)
{
	if (start >= end)	// 원소가 1개인 경우
	{
		return;
	}

	int key = start;	// 키는 첫번째 원소
	int i = start + 1;
	int j = end;
	int temp;

	while (i <= j)		// 엇갈릴 때까지 반복
	{	
		while (data[i] <= data[key]) // 키 값보다 큰 값을 만날 때까지
		{
			i++;
		}
		while (data[j] >= data[key] && j > start) // 키 값보다 작은 값을 만날 때까지
		{
			j--;
		}
		if (i > j)	// 현재 엇갈린 상태면 키 값과 교체
		{
			temp = data[j];
			data[j] = data[key];
			data[key] = temp;
		}
		else
		{
			temp = data[j];
			data[j] = data[i];
			data[i] = temp;
		}
	}

	quickSort(data, start, j - 1);
	quickSort(data, j + 1, end);
}

int main()
{
	int number = 10;
	int data[10] = { 1, 10, 5, 8, 7, 6, 4, 3, 2, 9 };

	quickSort(data, 0, number - 1);
	for (int i = 0; i < number; i++)
	{
		cout << data[i] << ' ';
	}
	return 0;
}